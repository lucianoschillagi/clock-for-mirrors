{"version":3,"sources":["Clock.styles.js","Clock.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Centered","p","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEaA,EAAYC,IAAOC,IAAV,0JAQTC,EAAWF,IAAOG,EAAV,6M,OCyBNC,E,kDA/Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAAIC,MAFR,E,qDAKnB,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,O,kCAIJ,WACEC,cAAcJ,KAAKC,W,kBAGrB,WACED,KAAKK,SAAS,CACZP,KAAM,IAAIC,S,oBAId,WACE,OACE,cAACT,EAAD,UACE,cAACG,EAAD,UAAWO,KAAKH,MAAMC,KAAKQ,6B,GA1BfC,IAAMC,WCKXC,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1e734933.chunk.js","sourcesContent":["import styled from 'styled-components';\n \nexport const Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nheight: calc( 100vh );\nbackground-color: red;\n`\nexport const Centered = styled.p`\njustify-content: center;\nalign-items: center;\nfont-size: 10vw;\nfont-weight: bold;\nfont-family: 'Dosis', sans-serif;\n-webkit-transform: scaleX(-1);\ntransform: scaleX(-1);\n`\n","import React from 'react';\nimport { Container, Centered } from './Clock.styles.js';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Centered>{this.state.date.toLocaleTimeString()}</Centered>\n      </Container>\n    );\n  }\n}\n\nexport default Clock;\n\n","import Clock from './Clock.component';\n\nfunction App() {\n  return (\n    <Clock/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}